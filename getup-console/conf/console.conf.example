#
# The base URL for the OpenShift REST API on the broker. If your
# environment is configured with a virtual host security module that
# bypasses normal authentication, be sure to set that virtual host
# here.
#
# Required
#
#BROKER_URL=https://dev-diego.ops.getupcloud.com/broker/rest
BROKER_URL=https://broker-4f82c8.openshift.local/broker/rest

DOMAIN_SUFFIX="getup.io"


#
# USER MANAGER URLs
#

#LOCAL_BROKER_BASE_URL=http://127.0.0.1:8080/getup
LOCAL_BROKER_BASE_URL=http://127.0.0.1:8080

USER_MANAGER_ACCOUNT_PLAN_URL=/account/plan/
USER_MANAGER_ACCOUNT_LANG_URL=/account/lang/

USER_MANAGER_ACCOUNT_PASSWORD_CHANGE_URL=/account/password/change/
USER_MANAGER_ACCOUNT_PASSWORD_RESET_URL=/account/password/reset/
USER_MANAGER_ACCOUNT_PASSWORD_RESET_KEY_URL=/account/password/reset/key/

USER_MANAGER_SUBSCRIPTION_URL=/subscription/
USER_MANAGER_SUBSCRIPTION_CONFIRM_URL=/subscription/confirm/
USER_MANAGER_SUBSCRIPTION_CANCEL_URL=/subscription/cancel/
USER_MANAGER_SUBSCRIPTION_PRICES_URL=/subscription/prices/

USER_MANAGER_PRIMARY_ADDRESS_URL=/billing/address/primary/
USER_MANAGER_BILLING_ADDRESS_URL=/billing/address/billing/
USER_MANAGER_BILLING_HISTORY_URL=/billing/history/
USER_MANAGER_BILLING_INVOICE_URL=/billing/invoice/

#
# A proxy URL to use when connecting with the broker.
#
# Optional
#
# BROKER_PROXY_URL=


#
# SSL settings for the connection between the console and broker.
# Specified as a Ruby hash of options to be passed to Net::HTTP.
#
# Optional, will use the default Ruby environment settings
#
BROKER_API_SSL_OPTIONS={:verify_mode => OpenSSL::SSL::VERIFY_NONE}

#
# The type of security mode that OpenShift should use.  There are
# two provided modules and the ability to specify a custom class.
#
# basic
#   When a user accesses the console through a browser, the console
#   will force BASIC authentication, and then pass that info on
#   to the broker.
#
# remote_user
#   The console is configured to check for the presence of one or
#   more headers on incoming requests in order to determine whether
#   a user is secure.  Headers may be copied along to the remote
#   server.
#
#   Intended for use with mod_auth and other similar REMOTE_USER
#   concepts in HTTP servers, where an HTTP proxy may handle
#   authentication and then forward the request with information
#   about the authenticated user.
#
# <class name>
#   The name of a class to load that will provide a security
#   implementation usable by the console.  See 
#   Console::Auth::RemoteUser for an example of a secure
#   implementation.  The class will be required by Ruby code
#   during startup of the console and any errors will prevent
#   load.
#
CONSOLE_SECURITY=session

#
# The name of the request env variable or header that indicates a 
# user is authenticated.  This value will be used as the display 
# name for the user unless remote_user_name_header is set.
#
# The value you provide here will be the key used to access the
# Rack environment.  All keys must be uppercase, and headers must
# be prefixed with "HTTP_".  Without that prefix, the value will
# assumed to be set by Passenger into the environment.
#
# When using mod_auth this value is normally set to 'REMOTE_USER'
#
# To read the HTTP request header 'X-Remote-User', set this to 
# 'HTTP_X_REMOTE_USER'.
#
# Required when CONSOLE_SECURITY=remote_user
#
REMOTE_USER_HEADER=REMOTE_USER

#
# When using remote_user security, the value of the authentication
# header may not be human readable or intended for display.  This 
# optional setting will first check for the presence of 
# REMOTE_USER_HEADER and then if this header is present, use it as
# the visible user name.  If the header is missing, the value of
# REMOTE_USER_HEADER will be shown instead.  This a Rack environment
# variable and so must follow the same rules as REMOTE_USER_HEADER.
#
# Optional
#
# REMOTE_USER_NAME_HEADER=HTTP_X_REMOTE_USER_NAME

AUTH_SESSION_KEY = 'd3a46ba8fc4223e0d0c7f22508d63a549f6d981d538aa147b04762fc347cd227a936cbb95caf2452d938bebeb04ae58e43cd207c9a94ca9f5720e0d179c15d68'

# User session duration, in seconds, before expire.
# Optional
# Default = 3600
AUTH_SESSION_EXPIRE=86400

SESSION_SECRET="d3a46ba8fc4223e0d0c7f22508d63a549f6d981d538aa147b04762fc347cd227a936cbb95caf2452d938bebeb04ae58e43cd207c9a94ca9f5720e0d179c15d68"
#
# A list of headers to pass from the incoming request to the API
# calls made against the broker for preserving authentication state.
# Separate header names with commas. The console will simply copy 
# these values without inspection.
#
# Required when CONSOLE_SECURITY=remote_user, may be empty
#
REMOTE_USER_COPY_HEADERS=X-Remote-User

