%h1.invisible Configure New Application
= app_wizard_steps_create 1
= breadcrumb_for_create_application(@application_type.persisted? ? I18n.t(:based_on_name, name: @application_type.display_name) : I18n.t(:from_scratch))
= flashes

:css
  #new_application.form-horizontal .control-group { margin-bottom: 14px; }
  #new_application.form-horizontal .controls { margin-left: 140px; }
  #new_application.form-horizontal input.expand { width: auto; max-width: -moz-available; }
  #new_application.form-horizontal input.narrow { width: 140px; }
  #new_application.form-horizontal .controls > h3 { margin-top: 5px; margin-bottom: 0; color: #FAFBFC; }
  #new_application.form-horizontal .controls > h3 > small { margin-left: 10px; vertical-align: middle; display: inline-block; }
  #new_application.form-horizontal .controls > h3 > select { margin-top: -5px; }
  #new_application.form-horizontal .control-label { margin-left: 15px; width: 120px; text-align: left; color: #949494; }
  #new_application.form-horizontal .error > .control-label { color: #CD1E25; }
  #new_application.form-horizontal .help-block { color: #949494; max-width: 500px; -moz-transition: 0.2s; overflow: hidden; text-overflow: ellipsis; }
  #new_application.form-horizontal .alert { max-width: 500px; }
  #new_application.form-horizontal .form-actions { padding-left: 140px; }
  #new_application.collapse-help .help-block { white-space: nowrap; opacity: 0.5; margin-top: 0; }
  #new_application.collapse-help .help-block:hover { opacity: 1; cursor: pointer; }
  h3 .font-icon {margin-left: 25px}
  @media (max-width: 767px) {
    #new_application.form-horizontal .control-label { margin-left: 0; }
    #new_application.form-horizontal .controls { margin-left: 0; }
    #new_application.form-horizontal .help-block { max-width: inherit; white-space: normal; }
    #new_application.form-horizontal .alert { max-width: inherit; }
    #new_application.form-horizontal .controls > h3 { display: inline-block; margin-top: 0; }
    #new_application.form-horizontal .form-actions { padding-left: 10px; }
  }
  @media (max-width:480px) {
    h3 .font-icon {margin-left: 10px}
  }
  .prices-block { float: left;width: 130px;}
  .prices-block h5 { text-transform: none; }
  .prices-block .prices .cost { float:right; }
  .help-block .vertical-line { float: left; border-left: 1px solid #949494; height: 66px; margin-left: 10px; margin-top: 27px; }
  .help-block .help-text { float: left;width: 346px;padding-left: 10px; padding-top: 24px; }


- advanced_path = application_type_path(@application_type.id, @application_type.to_params.merge(:advanced => true))
- focus = params[:focus]

= semantic_form_for @application, :url => applications_path, :html => {:class => "form-horizontal #{@compact ? 'collapse-help' : ''}"} do |f|
  = hidden_field_tag :advanced, @advanced
  - if @application_type.persisted?
    = f.hidden_field :application_type, :value => @application_type.id
  - else
    - Array(@application_type.cartridges).each do |c|
      = hidden_field_tag 'application_type[cartridges][]', c
    = hidden_field_tag 'application_type[initial_git_url]', @application_type.initial_git_url
    -#= hidden_field_tag 'application_type[initial_git_branch]', @application_type.initial_git_branch

  - e = @application.errors
  = f.semantic_errors :except => [:initial_git_url, :initial_git_branch, :name, :domain_name, :cartridges, :gear_profile]

  - if @application_type.tags.include? :in_development
    .alert This template is development only and not accessible in production

  %fieldset.inputs
    .control-group.control-group-important
      %h3.control-label= I18n.t(:based_on)
      .controls.first
        %h3
          #{@application_type.display_name} #{@application_type.source.to_s.humanize}

          - if @application_type.usage_rates?
            = usage_rate_indicator
            teste

          - if @application_type.cartridge?
            %span.font-icon.font-icon-size-16.font-icon-grey{"aria-hidden" => "true", "data-icon" => "\ue021", "title" => "Cartridge"}
          - elsif @application_type.quickstart?
            %span.font-icon.font-icon-size-16.font-icon-grey{"aria-hidden" => "true", "data-icon" => "\ue029", "title" => "QuickStart"}

      .controls
        - if @application_type.persisted?
          = show_description(@application_type.description, :class => 'help-block')

          - if @application_type.learn_more_url
            %p.help-block= link_to "Learn more", @application_type.learn_more_url
          - elsif @application_type.website
            %p.help-block= link_to @application_type.website, @application_type.website

          %p.help-block
            - case @application_type.support_type
            - when :openshift
              %span.label-support.label-support-openshift{:title => I18n.t(:cart_maintained_team_title)}= I18n.t(:cart_maintained_team)
            - when :partner
              %span.label-support.label-support-openshift{:title => I18n.t(:cart_maintained_partner_title)}= I18n.t(:cart_maintained_partner)
            - else
              %span.label-support.label-support-community.text-warning{:title => I18n.t(:cart_maintained_community_title)}= I18n.t(:cart_maintained_community)

            - unless @application_type.automatic_updates?
              %span.text-warning{:title => I18n.t(:cart_maintained_warning)}
                = I18n.t(:cart_maintained_warning_2)


          %p.help-block.label-tags= application_type_tags(@application_type.tags)

        - else
          %p.help-block= I18n.t(:app_is_link)
          %p.help-block= link_to I18n.t(:lhare_link), application_type_url(@application_type.id, @application_type.to_params)

  %fieldset.inputs
    -# This is implemented custom here rather than integrating into Formtastic because of its specific nature
    -#.control-group.control-group-important{:data => errors ? {:"server-error" => 'true'} : {}, :class => errors ? 'error' : ''}
    = control_group(e.has_key?(:name) || e.has_key?(:domain_name), :important => true) do
      %h3.control-label= I18n.t(:public_url)
      .controls.first
        = render :partial => 'applications/name', :locals => {:form => f, :application => @application}
        = f.inline_errors_for :name
        = f.inline_errors_for :domain_name
      .controls
        %p.help-block= I18n.t(:domain_register)

    = control_group(e.has_key?(:initial_git_url) || e.has_key?(:initial_git_branch), :important => true) do
      %h3.control-label= I18n.t(:source_code)
      .controls.first
        - if @advanced
          = f.text_field :initial_git_url, :class => 'expand', :placeholder => I18n.t(:git_repo_url), :autofocus => focus == 'initial_git_url'
          -#= f.text_field :initial_git_branch, :class => 'narrow', :placeholder => 'Git branch (optional)'
          %span branch 'master'
        - else
          %h3
            - if @application_type.initial_git_url.present?
              #{link_to @application_type.initial_git_url, @application_type.initial_git_url, :target => "_blank"}
              -# if @application_type.initial_git_branch
                (branch '#{@application_type.initial_git_branch}')
            - else
              = I18n.t(:Default)
            %small= link_to I18n.t(:Change), advanced_path, :data => {:submit_form => true, :focus => 'initial_git_url'}
        = f.inline_errors_for :initial_git_url
        = f.inline_errors_for :initial_git_branch

      .controls
        %p.help-block 
          - if @application_type.initial_git_url || @advanced
            = I18n.t(:git_repo_caption_1)
          - else
            = I18n.t(:git_repo_caption_2)

    = control_group(e.has_key?(:gear_profile), :important => true) do
      %h3.control-label Gears
      .controls.first
        - gear_sizes = @capabilities.gear_sizes
        - if gear_sizes.length > 1
          - if @advanced
            = f.select :gear_profile, gear_sizes.map{ |size| [size.to_s.titleize, size]}, {}, {:autofocus => focus == 'gear_profile'}
          - else
            %h3
              = gear_sizes.first.to_s.titleize
              %small= link_to I18n.t(:Change), advanced_path, :data => {:submit_form => true, :focus => 'gear_profile'}
            = f.hidden_field :gear_profile

        - else
          %h3= gear_sizes.first.to_s.titleize
          = f.hidden_field :gear_profile
        = f.inline_errors_for :gear_profile

      .controls
        .help-block
          %span.prices-block
            %h5=I18n.t(:gear_cost_per_hour)
            .prices
              %span.size= 'Small'.titleize
              %span.cost R$ 0,122
            .prices
              %span.size= 'Small-BR'.titleize
              %span.cost R$ 0,148
            .prices
              %span.size= 'Medium'.titleize
              %span.cost R$ 0,305
            .prices
              %span.size= 'Medium-BR'.titleize
              %span.cost R$ 0,370
          %span.vertical-line
          %span.help-text
            = I18n.t(:gears_explain, gear_size: gear_sizes.first.to_s)
            - if gear_sizes.length > 1
              = I18n.t(:larger_gear)

    = control_group(e.has_key?(:cartridges), :important => true) do
      %h3.control-label Cartridges
      .controls.first
        - if @cartridges.present?
          %h3
            = map_to_sentence(@cartridges) do |(name, carts)|
              - if carts.length > 1
                = select_tag 'application[cartridges][]', options_for_select(carts.sort.map{ |c| [c.display_name, c.name] }, [carts.map(&:name) & @application.cartridge_names].first ), :title => I18n.t(:choose_cart_match, name: name)
              - elsif carts.length == 1
                = hidden_field_tag 'application[cartridges][]', [carts.first.name]
                = carts.first.display_name
              - else
                %span.text-warning #{name}
        - else
          %h3
            %span.text-warning{:title => I18n.t(:app_req_web_cart)} None
        = f.inline_errors_for :cartridges

      .controls
        %p.help-block
          = I18n.t(:cartridges_explain)

    .control-group.control-group-important
      %h3.control-label= I18n.t(:scaling)
      .controls.first
        - can_scale = can_scale_application_type(@application_type, @capabilities)
        - scale_reason = cannot_scale_title(@application_type, @capabilities)
        - if can_scale
          - if @advanced
            = f.select :scale, scale_options, {}, {:autofocus => focus == 'scale'}
          - else
            %h3{:title => I18n.t(:scale_web_loader)}
              = scale_options[@application.scale? ? 1 : 0][0]
              %small= link_to I18n.t(:Change), advanced_path, :data => {:submit_form => true, :focus => 'scale'}
        - else
          %h3
            %span.text-warning{:title => scale_reason}= scale_options[0][0]

      .controls
        %p.help-block
          = I18n.t(:scale_explain_1)

          - if can_scale
          = I18n.t(:scale_explain_2)

          - else
            %span.text-warning= scale_reason

        = render :partial => 'application_types/application_type_notifications', :locals => { :type => @application_type }

  = f.buttons do
    = link_to I18n.t(:Back), application_types_path, :class => 'btn btn-danger'
    = f.commit_button :button_html => { :disabled => @disabled }, :label => I18n.t(:Create_App)
    = f.loading

- if @compact
  - content_for :javascripts do
    :javascript
      $(function() {
        $('.help-block').click(function() {
          $("#new_application.collapse-help").removeClass('collapse-help');
        });
      });

- content_for :javascripts do
  :javascript
    $(function() {
      $('a[data-submit-form]').click(function() {
        var fields = $(this).closest('form').serializeArray();

        // Remove special fields
        fields = $.grep(fields, function(field) {
          return ['utf8', 'authenticity_token', 'advanced'].indexOf(field.name) == -1;
        });

        // Explicitly set advanced
        fields.push({name: 'advanced', value: 'true'});

        // Set focus target
        fields.push({name: 'focus', value: $(this).data('focus')});

        window.location.href = "#{application_type_path(@application_type.id)}" + '?' + $.param(fields);
        return false;
      });
    });
    $(function() {
      $('input, textarea').placeholder();
    });

