- content_for :full_layout, true
- content_for :dark_layout, true

- breadcrumb_for_application @application

- content_for :top do
  .grid-wrapper.section-header
    %nav.span12.span-flush-right.application-info
      %ul.pull-right.unstyled-flat.bits
        %li
          %h6 Gears
          %span.data #{@application.gear_count} total

        %li#restart-container.popover-restart
          = link_to application_restart_path(@application), { :id => 'restart-link', 'data-html' => 'true', 'data-placement' => 'bottom', :class => 'block btn-console-header', :title => I18n.t(:Restart_Application)} do
            %span.font-icon.font-icon-size-34.font-icon-grey{:alt => I18n.t(:Restart), :title => I18n.t(:Restart_Application), "aria-hidden" => "true", "data-icon" => "\ue020"}
          #restart-popover.hide
            = render 'restarts/form'

      %h1.name= @application.name
      .url
        %strong @
        = link_to @application.web_url, @application.web_url

%section#app-specifics
%section#app-cartridges.span9
  %header.clearfix.header-bar
    %h3
      Cartridges
    .header-btn
      = link_to application_cartridge_types_path(@application) do
        %span.header-btn-title= I18n.t(:Add_Cartridge)
        %span.font-icon{"aria-hidden" => "true", "data-icon" => "\uee16"}
    -#%h3.pull-left Cartridges
      .pull-right
        = link_to application_cartridge_types_path(@application), :class => 'btn-add-cart' do
          Add Cartridge
          %span.sprite

  - @gear_groups.each_with_index do |group,g|
    .gear-group
      - group.cartridges.each_with_index do |cartridge,c|
        .cartridge-block
          .cartridge-border
            .cartridge-inset
              .clearfix
                %ul.pull-right.unstyled-flat.bits
                  - if c == 0
                    %li
                      %h6= I18n.t(:Status)
                      %span.data= gear_group_state(group.states)
                    %li
                      %h6 Gears
                      %span.data{:title => gear_group_count_title(group.gears.length)}= cartridge_gear_group_count(group)
                    %li
                      %h6 Storage
                      %span.data{:style => "text-transform: none"}
                        = link_to cartridge_storage(cartridge), application_storage_path(@application)
                  - else
                    %li
                      %h6 Gears
                      %span.data{:title => I18n.t(:shared_resources)}= I18n.t(:Shared)

                      -#%li
                        %h6 Type
                        %span.data= cartridge.type
                      -#
                        %li
                          %img{:src => "/app/images/console/gear-sm.png", :alt => ''}
                %h2= cartridge.display_name

              - if cartridge.git_url
                - if @has_keys
                  %h6= I18n.t(:Git_Repository)
                  %p
                    %input#application_git_url.git-url{:readonly => 'readonly', :value => cartridge.git_url, :title => I18n.t(:git_repo_caption)}
                    - content_for :javascripts do
                      :javascript
                        $('#application_git_url').focus(function() {this.select()});

                  %h6= link_to I18n.t(:ssh_login), '#', :'data-unhide' => '.ssh.hidden'
                  .ssh.hidden
                    %p!= I18n.t(:ssh_login_caption, ssh_url: link_to(I18n.t(:ssh_help_page), ssh_help_url))
                    %p
                      %input#application_ssh_url.git-url{:readonly => 'readonly', :value => "ssh #{cartridge.ssh_string}", :title => I18n.t(:ssh_command)}
                      - content_for :javascripts do
                        :javascript
                          $('#application_ssh_url').focus(function() {this.select()});

                - else
                  %p!= I18n.t(:ssh_add_key_link, key_url: link_to(I18n.t(:ssh_add_pub_key), new_key_path))

              - if cartridge.scales? || cartridge.buildable?
                .embedded
                  - if cartridge.scales?
                    .embedded-cart
                      - if cartridge.current_scale == 1
                        = link_to I18n.t(:scale_with_haproxy), application_scaling_path(@application), :title => I18n.t(:scale_with_haproxy_caption)
                      - else
                        = link_to I18n.t(:scaled_number, scale: cartridge.current_scale),
                                  application_scaling_path(@application), 
                                  :title => web_cartridge_scale_title(cartridge)
                  - if cartridge.builds?
                    .embedded-cart 
                      =link_to I18n.t(:jenkins_caption_1), @application.build_job_url, :title=> I18n.t(:jenkins_caption_2)
                      =link_to '(' + I18n.t(:configure) + ')', application_building_path(@application), :title => I18n.t(:jenkins_caption_3)
                  - elsif cartridge.buildable?
                    .embedded-cart= link_to I18n.t(:jenkins_caption_4), application_building_path(@application), :title => I18n.t(:jenkins_caption_5)


  .right.btn-toolbar
    = link_to application_cartridge_types_path(@application), :class => 'btn btn-primary btn-large' do
      = I18n.t(:Add)
      %strong Cartridge
      %i.icon-add

%aside#app-unique-info.span3
  %section#aliases.sidebar
    %header.clearfix.header-bar
      %h5= I18n.t(:Aliases)
      .header-btn
        = link_to application_aliases_path(@application) do
          %span.header-btn-title= I18n.t(:add_alias)
          %span.font-icon{"aria-hidden" => "true", "data-icon" => "\uee16"}
          
    %ul.unstyled
      - if @application.aliases.empty?
        %li 
          %span= I18n.t(:No_aliases_set)
          = link_to(I18n.t(:set_one_now), application_aliases_path(@application))
      - else
        - alias_scheme = @application.web_url.split(':').first
        - @application.aliases.sort.each do |a|
          %li
            - if a.has_private_ssl_certificate?
              %span.icon-lock.font-icon-size-12.font-icon-white.pull-left{'aria-hidden' => true, :title => I18n.t(:ssl_cert)}
            - else
              %span.icon-unlock.font-icon-size-12.font-icon-grey.pull-left{'aria-hidden' => true, :title => I18n.t(:no_ssl_cert)}
            = link_to a.name, application_alias_path(@application, a)
            %span.pull-right.icon-pencil.font-icon-grey
              = link_to I18n.t(:edit), application_alias_path(@application, a)

    - if @application.initial_git_url.present?
      %h5= I18n.t(:Based_On)
      %ul.unstyled
        %li= link_to @application.initial_git_url, @application.initial_git_url

  #assistance
    %h5= I18n.t(:new_to_openshift)
    %ul.unstyled
      %li= link_to I18n.t(:app_getting_started), get_started_application_path(@application)

    %h5= I18n.t(:Need_Help)
    %ul.unstyled
      //%li= link_to 'OpenShift User Guide', user_guide_url
      %li= link_to I18n.t(:help_sync_repo), sync_git_with_remote_repo_knowledge_base_url 

  -# %h5 Need Help? #restore later
    %ul.unstyled
      %li
      - if @application_type.help_topics and not @application_type.help_topics.empty?
        %h5= @application.framework_name + ' Help'
        %ul.unstyled
        - @application_type.help_topics.each do |key, value|
          %li= link_to key, value

  .btn-toolbar
    = link_to I18n.t(:delete_this_app), delete_application_path(@application), :class => 'btn btn-small'

- content_for :javascripts do
  :javascript
    $('#restart-link').popover({
      content: function() { return $('#restart-popover').html(); }
    }).click(function() {
      $('#restart-link').toggleClass('highlight');
      $('#restart-container').activateForms();
      return false;
    });

    $('#restart-container').on('click', '.restart-cancel', function() {
      $('#restart-link').removeClass('highlight').popover('hide');
      return false;
    }).on('submit', 'form', function() {
      $('#restart-container .btn').hide();
    });
