- content_for :title, "Invoice info"
- breadcrumb_for_account_billing 'Invoice info'
%h1 Invoice info
= flashes

- if @status
  .row.billing-info
    .span12
      %section
  
        %table.table.table-fixed.info
          %tbody
            %tr
              %td.center.middle Fatura #{@id.rjust(4, '0')}
              %td.middle
                %h5 Getup
                %ul.unstyled
                  %li R. Dom Pedro OsÃ³rio, 191
                  %li Porto Alegre - RS - 94036-45
                  %li Brasil
              %td.middle
                %h5 To
                %ul.unstyled
                  %li #{@user[:first_name]}
                  %li #{@user[:email]}
              %td.middle
                %dl
                  %dt Date:
                  - end_date = !@period[:end].nil? ? Date.strptime("#{@period[:end]}","%Y-%m-%d").strftime("%h %d, %Y") : '-'
                  %dd #{end_date}
  
                  %dt Total:
                  %dd #{@acronym} #{number_with_precision(@amount[:total][:amount].to_f, :precision => 2)}
  
                  %dt Client Id:
                  %dd #{@user[:id].to_s.rjust(4, '0')}
  
        - @applications.each do |app|
          - total = 0
          %h3 Application #{app[1][:name]}
          %table.table.table-fixed.invoice
            %thead
              %tr
                %th{:scope => 'col'} Item
                %th{:scope => 'col'} Type
                %th{:scope => 'col'} Quantity
                %th{:scope => 'col'} Unit
                %th{:scope => 'col'} Unit cost
                %th{:scope => 'col'} Total cost
            %tbody
            - app[1][:items].each do |item|
              - total += item[:amount].to_f
              %tr
                %td Gear #{item[:gear_id]}<br>#{item[:billing_start].gsub('T', ' ').byteslice(0, 19)} - #{item[:billing_end].gsub('T', ' ').byteslice(0, 19)}
                %td #{item[:usage_type]}
                %td #{item[:hours]}
                %td #{@unit[@price.find(item[:usage_type]).next[1][:unit]]}
                %td #{@acronym} #{@price.find(item[:usage_type]).next[1][:value]}
                %td #{@acronym} #{number_with_precision(item[:amount].to_f, :precision => 2)}
            %tr
              %td{:colspan => 5}
              %td #{@acronym} #{number_with_precision(total, :precision => 2)}  
  
      - if !@amount[:GEAR_USAGE].nil?
        %h3 Bonus
        - bonus_quantity = !@amount[:GEAR_USAGE][:credit].nil? ? -@amount[:GEAR_USAGE][:credit][:hours] : '-'
        - bonus_unit     = !@amount[:GEAR_USAGE].nil? ? @amount[:GEAR_USAGE][:unit] : '-'
        - bonus_cost     = !@amount[:total].nil? ? @prices.find(@amount[:total][:currency]).next[1][:GEAR_USAGE][:value] : '-'
        - bonus_total    = !@amount[:GEAR_USAGE][:credit].nil? ? @amount[:GEAR_USAGE][:credit][:amount] : '-'
        %table.table.table-fixed.invoice
          %thead
            %tr
              %th{:scope => 'col'} Item
              %th{:scope => 'col'} Type
              %th{:scope => 'col'} Quantity
              %th{:scope => 'col'} Unit
              %th{:scope => 'col'} Unit cost
              %th{:scope => 'col'} Total cost
          %tbody
            %tr
              %td Free gear early access
              %td Credit
              %td #{bonus_quantity}
              %td #{bonus_unit}
              %td #{@acronym} #{bonus_cost}
              %td #{@acronym} #{bonus_total}
  
